#!/usr/bin/python

import sys
from PyQt4.QtGui import *
from PyQt4.QtCore import *
from subprocess import call


params = [
    ('-a', '-a'),('-A', '-A'),('--author', '--author'),('-b', '-b'),
    ('-B', '-B'),('-C','-C'),('-d', '-d'),('-D','-D'),('-f', '-f'),
    ('-F', '-F'),('--file-type', '--file-type'),('-g','-g'),('-G','-G'),
    ('-h','-h'),('--si','--si'),('-H','-H'),('-i','-i'),('-I','-I'),
    ('-k','-k'),('-l','-l'),('-m','-m'),('-n','-n'),('-o','-o'),
    ('-Q','-Q'),('-r','-r'),('-R','-R'),('-s','-s'),('-t','-t'),
    ('-U','-U'),('-v','-v'),('-x','-x'),('-X','-X'),('-1','-1'),
    ('--help','--help'),('--version','--version')
]


class Window(QWidget):
    def __init__(self):
        QWidget.__init__(self)

        self.selected_params = []

        button = QPushButton('just ls execute', self)
        button.clicked.connect(self.run_ls)

        layout = QVBoxLayout()
        layout.addWidget(button)

        for p in params:
            c = QCheckBox(p[1])
            layout.addWidget(c)
            c.stateChanged.connect(self.gen_callback(p[0]))

        self.setLayout(layout)

    def gen_callback(self, param):
        def callback(state):
            if state == Qt.Unchecked:
                self.selected_params.remove(param)
            else:
                self.selected_params.append(param)
            self.run_ls(self.selected_params)
        return callback

    def run_ls(self, params):
        if not isinstance(params, list):
	    params = []
        call(["ls"] + params)


if __name__ == '__main__':
    app = QApplication(sys.argv)

    w = Window()
    w.resize(400, 600)
    w.show()

    app.exec_()
